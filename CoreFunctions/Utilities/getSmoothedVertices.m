<<<<<<< HEAD
<<<<<<< HEAD
  function smoothedVC = getSmoothedVertices(vc, VertConn, smoothValue)
        smoothValue = smoothValue/100;
       
            iVertices = 1:size(vc,1);
            % 计算平滑迭代次数（与PlotSource一致）
            SurfSmoothIterations = ceil(300 * smoothValue * length(iVertices) / 100000);
            % 调用tess_smooth计算平滑后的顶点
            smoothedVC = vc;
            smoothedVC(iVertices,:) = tess_smooth(...
                vc(iVertices,:), ...
                smoothValue, ...
                SurfSmoothIterations, ...
                VertConn(iVertices,iVertices), ...
                1 ...
                );
=======
  function smoothedVC = getSmoothedVertices(vc, VertConn, smoothValue)
        smoothValue = smoothValue/100;
       
            iVertices = 1:size(vc,1);
            % 计算平滑迭代次数（与PlotSource一致）
            SurfSmoothIterations = ceil(300 * smoothValue * length(iVertices) / 100000);
            % 调用tess_smooth计算平滑后的顶点
            smoothedVC = vc;
            smoothedVC(iVertices,:) = tess_smooth(...
                vc(iVertices,:), ...
                smoothValue, ...
                SurfSmoothIterations, ...
                VertConn(iVertices,iVertices), ...
                1 ...
                );
>>>>>>> origin
=======
  function smoothedVC = getSmoothedVertices(vc, VertConn, smoothValue)
        smoothValue = smoothValue/100;
       
            iVertices = 1:size(vc,1);
            % 计算平滑迭代次数（与PlotSource一致）
            SurfSmoothIterations = ceil(300 * smoothValue * length(iVertices) / 100000);
            % 调用tess_smooth计算平滑后的顶点
            smoothedVC = vc;
            smoothedVC(iVertices,:) = tess_smooth(...
                vc(iVertices,:), ...
                smoothValue, ...
                SurfSmoothIterations, ...
                VertConn(iVertices,iVertices), ...
                1 ...
                );
>>>>>>> 3afa99beaec32453db712d4621fd05217f53fcfd
        end